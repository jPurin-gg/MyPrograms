#include <stdlib.h>
#define _USE_MATH_DEFINES
#include <math.h>
#include <GL/glut.h>

/*
GLdouble vP[4][3] = {
    {1.000, 0.000,0.000},
    {-0.333, 0.943, 0.000},
    {-0.333, -0.471, 0.816},
    {-0.333, -0.471, -0.816}
};

int tP[4][3] = {
    {0, 1, 2},{0, 3, 1},
    {0, 2, 3},{1, 3, 2}
};
*/

GLdouble vP[8][3] = {
    {-0.577,-0.577,0.577},{0.577,-0.577,0.577},
    {0.577,-0.577,-0.577},{-0.577,-0.577,-0.577},
    {-0.577,0.577,0.577}, {0.577,0.577,0.577},
    {0.577,0.577,-0.577}, {-0.577,0.577,-0.577}
};
int tP[6][4] = {
    {3,2,1,0},{0,1,5,4},{1,2,6,5},
    {4,5,6,7},{3,7,6,2},{0,4,7,3}
};



/*
GLdouble vP[6][3] = {
    {1,0,0},{0,1,0},{0,0,1},
    {-1,0,0},{0,-1,0},{0,0,-1}
};
int tP[8][3] = {
    {0,1,2},{5,1,0},{3,1,5},{2,1,3},
    {2,4,0},{0,4,5},{5,4,3},{3,4,2}
};
*/

GLdouble cP[8][3] = {
    {1.0,0.0,0.0},{0.0,1.0,0.0},
    {0.0,0.0,1.0},{1.0,1.0,0.0},
    {1.0,0.0,1.0},{0.0,1.0,1.0},
    {0.0,0.0,0.5},{0.5,0.0,0.0}
};



void display() {
    int i, j;
    glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
    glMatrixMode(GL_MODELVIEW);
    glBegin(GL_TRIANGLES);
    for (i = 0; i < 6; i++) {
        for (j = 0; j < 4; j++) {
            glNormal3dv(vP[tP[i][j]]);
            glVertex3dv(vP[tP[i][j]]);
        }
    }
    glEnd();
    glutSwapBuffers();
}

void init() {
    glClearColor(0.0, 0.0, 0.0, 1.0);
    gluLookAt(1, 1, 1, 0, 0, 0, 0, 0, 1);
}

static void timer(int dummy) {

    glutTimerFunc(100, timer, 0);
    glMatrixMode(GL_MODELVIEW);
    glRotated(3.0, 0, 0, 1);
    glutPostRedisplay();

}

int main(int argc, char** argv)
{
    glutInit(&argc, argv);
    glutCreateWindow(argv[0]);
    glutDisplayFunc(display);
    glEnable(GL_CULL_FACE);
    glEnable(GL_LIGHTING);
    glEnable(GL_NORMALIZE);
    glEnable(GL_LIGHT0);
    glShadeModel(GL_SMOOTH);
    glutTimerFunc(100, timer, 0);
    glOrtho(-3, 3, -3, 3, -3, 3);
    init();
    glutMainLoop();
    return 0;
}